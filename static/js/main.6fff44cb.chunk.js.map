{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","props","useState","currentPositionImgList","setState","images","step","frameSize","itemWidth","animationDuration","infinite","className","style","width","transform","transition","map","img","src","alt","indexOf","type","onClick","state","length","disabled","App","this","htmlFor","id","defaultValue","min","onChange","e","target","value","currentTarget","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fff44cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport const Carousel: React.FC<Props> = (props) => {\n  const [currentPositionImgList, setState] = useState(0);\n  const {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = props;\n\n  const showNexImg = () => {\n    if (currentPositionImgList\n      > (images.length * itemWidth - frameSize * itemWidth) * -1\n    ) {\n      if (currentPositionImgList - (itemWidth * step)\n      < (images.length * itemWidth - frameSize * itemWidth) * -1) {\n        setState((images.length * itemWidth - frameSize * itemWidth) * -1);\n\n        return;\n      }\n\n      setState(state => state - (itemWidth * step));\n    }\n\n    if (infinite && currentPositionImgList\n      <= (images.length * itemWidth - frameSize * itemWidth) * -1) {\n      setState(0);\n    }\n  };\n\n  const showPrevImg = () => {\n    if (currentPositionImgList < 0) {\n      if (currentPositionImgList + (itemWidth * step) > 0) {\n        setState(0);\n\n        return;\n      }\n\n      setState(state => state + (itemWidth * step));\n    }\n\n    if (infinite && currentPositionImgList === 0) {\n      setState((images.length * itemWidth - frameSize * itemWidth) * -1);\n    }\n  };\n\n  return (\n    <div className=\"carousel\" style={{ width: frameSize * itemWidth }}>\n      <ul\n        className=\"carousel__list\"\n        style={{\n          transform: `translate(${currentPositionImgList}px, 0)`,\n          transition: `all ${animationDuration}ms ease`,\n        }}\n      >\n        {images.map(img => (\n          <li key={images.indexOf(img)}>\n            <img\n              src={`${img}`}\n              alt=\"Smile head\"\n              style={{ width: itemWidth }}\n            />\n          </li>\n        ))}\n      </ul>\n      <div className=\"buttons\">\n        <button\n          className=\"previousButton\"\n          type=\"button\"\n          onClick={showPrevImg}\n          disabled={\n            infinite ? false : currentPositionImgList === 0\n          }\n        >\n          &#8592;\n        </button>\n        <button\n          className=\"nextButton\"\n          type=\"button\"\n          onClick={showNexImg}\n          disabled={\n            infinite\n              ? false\n              : currentPositionImgList === (\n                images.length * itemWidth - frameSize * itemWidth\n              ) * -1\n          }\n        >\n          &#8594;\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"form\">\n          <label htmlFor=\"itemWidth\" className=\"form__label\">\n            Item width\n            <br />\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              defaultValue={130}\n              min={130}\n              onChange={(e) => {\n                this.setState({ itemWidth: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"frameSize\" className=\"form__label\">\n            Frame size\n            <br />\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              defaultValue={3}\n              min={1}\n              onChange={(e) => {\n                this.setState({ frameSize: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"step\" className=\"form__label\">\n            Step\n            <br />\n            <input\n              type=\"number\"\n              id=\"step\"\n              defaultValue={3}\n              min={1}\n              onChange={(e) => {\n                this.setState({ step: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\" className=\"form__label\">\n            Animation duration\n            <br />\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              defaultValue={1000}\n              min={0}\n              step=\"1000\"\n              onChange={(e) => {\n                this.setState({ animationDuration: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"infinite\" className=\"form__label\">\n            Infinite\n            <br />\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              onClick={(e) => {\n                this.setState({ infinite: e.currentTarget.checked });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}