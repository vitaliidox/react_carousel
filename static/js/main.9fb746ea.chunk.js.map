{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","props","images","step","frameSize","itemWidth","animationDuration","currentPositionImgList","className","style","width","map","img","src","alt","indexOf","type","onClick","ev","carouselList","document","querySelector","nextButton","event","transition","transform","currentTarget","disabled","previousButton","length","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"uPAqGeA,EAzFmB,SAACC,GACjC,IACEC,EAMED,EANFC,OADF,EAOID,EALFE,YAFF,MAES,EAFT,IAOIF,EAJFG,iBAHF,MAGc,EAHd,IAOIH,EAHFI,iBAJF,MAIc,IAJd,IAOIJ,EAFFK,yBALF,MAKsB,IALtB,EASIC,EAAyB,EAkD7B,OACE,sBAAKC,UAAU,WAAWC,MAAO,CAAEC,MAAON,EAAYC,GAAtD,UACE,oBAAIG,UAAU,iBAAd,SACGN,EAAOS,KAAI,SAAAC,GAAG,OACb,6BACE,qBAAKC,IAAG,UAAKD,GAAOE,IAAG,UAAKZ,EAAOa,QAAQH,OADpCV,EAAOa,QAAQH,SAK5B,sBAAKJ,UAAU,UAAf,UACE,wBACEA,UAAU,iBACVQ,KAAK,SACLC,QAnCN,SAACC,GACD,IAAMC,EACJC,SAASC,cAAc,mBACnBC,EACJF,SAASC,cAAc,eACnBE,EAAQL,EAEVX,EAAyB,IAC3BA,GAA2BF,EAAYF,EACvCgB,EAAaV,MAAMe,WAAnB,cAAuClB,EAAvC,WACAa,EAAaV,MAAMgB,UAAnB,oBAA4ClB,EAA5C,WAG6B,IAA3BA,IACFgB,EAAMG,cAAcC,UAAW,GAG7BL,EAAWK,WACbL,EAAWK,UAAW,IAcpB,oBAOA,wBACEnB,UAAU,aACVQ,KAAK,SACLC,QAnEN,SAACC,GACD,IAAMC,EACJC,SAASC,cAAc,mBACnBO,EACJR,SAASC,cAAc,mBACnBE,EAAQL,EAEVX,GACuD,GAAtDL,EAAO2B,OAASxB,EAAYD,EAAYC,KAC3CE,GAA2BF,EAAYF,EACvCgB,EAAaV,MAAMgB,UAAnB,oBAA4ClB,EAA5C,UACAY,EAAaV,MAAMe,WAAnB,cAAuClB,EAAvC,YAGEC,KACyD,GAAtDL,EAAO2B,OAASxB,EAAYD,EAAYC,KAC7CkB,EAAMG,cAAcC,UAAW,GAG7BC,EAAeD,WACjBC,EAAeD,UAAW,IA4CxB,2BCjFFG,E,4MACJC,MAAQ,CACN7B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAW8B,KAAKD,MAAhB7B,OAER,OACE,sBAAKM,UAAU,MAAf,UAEE,gDAAmBN,EAAO2B,OAA1B,aACA,cAAC,EAAD,CACE3B,OAAQA,EACRC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,a,GA5BX2B,IAAMC,WAoCTJ,ICzCfK,IAASC,OAAO,cAAC,EAAD,IAAShB,SAASiB,eAAe,W","file":"static/js/main.9fb746ea.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  // infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = (props) => {\n  const {\n    images,\n    step = 1,\n    frameSize = 3,\n    itemWidth = 130,\n    animationDuration = 1000,\n    // infinite,\n  } = props;\n\n  let currentPositionImgList = 0;\n\n  const showNexImg\n  = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const carouselList\n    = document.querySelector('.Carousel__list') as HTMLElement;\n    const previousButton\n    = document.querySelector('.PreviousButton') as HTMLButtonElement;\n    const event = ev;\n\n    if (currentPositionImgList\n      > (images.length * itemWidth - frameSize * itemWidth) * -1) {\n      currentPositionImgList -= (itemWidth * step);\n      carouselList.style.transform = `translate(${currentPositionImgList}px, 0)`;\n      carouselList.style.transition = `all ${animationDuration}ms ease`;\n    }\n\n    if (currentPositionImgList\n      === (images.length * itemWidth - frameSize * itemWidth) * -1) {\n      event.currentTarget.disabled = true;\n    }\n\n    if (previousButton.disabled) {\n      previousButton.disabled = false;\n    }\n  };\n\n  const showPrevImg\n  = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const carouselList\n    = document.querySelector('.Carousel__list') as HTMLElement;\n    const nextButton\n    = document.querySelector('.NextButton') as HTMLButtonElement;\n    const event = ev;\n\n    if (currentPositionImgList < 0) {\n      currentPositionImgList += (itemWidth * step);\n      carouselList.style.transition = `all ${animationDuration}ms ease`;\n      carouselList.style.transform = `translate(${currentPositionImgList}px, 0)`;\n    }\n\n    if (currentPositionImgList === 0) {\n      event.currentTarget.disabled = true;\n    }\n\n    if (nextButton.disabled) {\n      nextButton.disabled = false;\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: frameSize * itemWidth }}>\n      <ul className=\"Carousel__list\">\n        {images.map(img => (\n          <li key={images.indexOf(img)}>\n            <img src={`${img}`} alt={`${images.indexOf(img)}`} />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Buttons\">\n        <button\n          className=\"PreviousButton\"\n          type=\"button\"\n          onClick={showPrevImg}\n        >\n          &#8592;\n        </button>\n        <button\n          className=\"NextButton\"\n          type=\"button\"\n          onClick={showNexImg}\n        >\n          &#8594;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <Carousel\n          images={images}\n          step={1}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          // infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}